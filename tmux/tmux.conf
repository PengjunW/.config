
# cat << EOF > /dev/null
#        _                         _                        
#   ___ | |__    _ __ ___  _   _  | |_ _ __ ___  _   ___  __
#  / _ \| '_ \  | '_ ` _ \| | | | | __| '_ ` _ \| | | \ \/ /
# | (_) | | | | | | | | | | |_| | | |_| | | | | | |_| |>  < 
#  \___/|_| |_| |_| |_| |_|\__, |  \__|_| |_| |_|\__,_/_/\_\
#                          |___/                            
# @Author : Mamba

# -- general -------------------------------------------------------------------

set -g default-terminal "screen-256color" # colors!
set -ga terminal-overrides ',xterm-256color:RGB'
setw -g xterm-keys on
set -s escape-time 0                     # faster command sequences
set -sg repeat-time 300                   # increase repeat timeout
set -s focus-events on
set -g mouse on 

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

setw -g mode-keys  vi                      # 进入复制模式的时候使用 v

set -g history-limit 10000                 # boost history

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

set -ga update-environment '\
DISPLAY DBUS_SESSION_BUS_ADDRESS \
QT_IM_MODULE QT_QPA_PLATFORMTHEME \
SESSION_MANAGER \
XDG_CONFIG_HOME XDG_CACHE_HOME XDG_DATA_HOME\
XDG_MENU_PREFIX XDG_RUNTIME_DIR XDG_SESSION_CLASS \
XDG_SESSION_DESKTOP XDG_SESSION_TYPE XDG_CURRENT_DESKTOP \
XMODIFIERS \
FZF_DEFAULT_OPTS \
'

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on  # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 2000 # slightly longer pane indicators display time
set -g display-time 2000      # slightly longer status messages display time

set -g status-interval 1     # redraw status line every 1 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off


# -- navigation ----------------------------------------------------------------

# -- prefix
unbind C-b
set -g prefix 'C-s'

# -- layout
bind D source-file ~/.tmux/layout1

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# split current window vertically
unbind '"'
bind _ split-window -v
# split current window horizontall
unbind %
bind - split-window -h

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# toggle mouse
# bind m run "cut -c3- ~/.tmux.conf | sh -s _toggle_mouse"

# -- urlview -------------------------------------------------------------------

# bind U run "cut -c3- ~/.tmux.conf | sh -s _urlview #{pane_id}"


# -- facebook pathpicker -------------------------------------------------------

# bind F run "cut -c3- ~/.tmux.conf | sh -s _fpp #{pane_id}"


# -- list choice (tmux < 2.4) --------------------------------------------------

# vi-choice is gone in tmux >= 2.4
run -b 'tmux bind -t vi-choice h tree-collapse 2> /dev/null || true'
run -b 'tmux bind -t vi-choice l tree-expand 2> /dev/null || true'
run -b 'tmux bind -t vi-choice K start-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice J end-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice H tree-collapse-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice L tree-expand-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice Escape cancel 2> /dev/null || true'


# -- edit mode (tmux < 2.4) ----------------------------------------------------

# vi-edit is gone in tmux >= 2.4
run -b 'tmux bind -ct vi-edit H start-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit L end-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit q cancel 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit Escape cancel 2> /dev/null || true'


# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'


# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from


# -- user defined overrides ----------------------------------------------------

source ~/.config/tmux/tmuxLine

# -- 8< ------------------------------------------------------------------------

# run 'cut -c3- ~/.tmux.conf | sh -s _apply_configuration'
# run -b '[ -z "#{window_active}" ] && [ -z "#{version}" ] && tmux set display-time 3000 \; display "This configuration will soon require tmux >= 2.4" \; set -u display-time || true'
# EOF
# bind_with_sys_clipboard() {
#     if [[ -x $(command -v xsel) ]]; then
#         cmd='xsel -i -b'
#     elif [[ -x $(command -v xclip) ]]; then
#         cmd='xclip -i -selection clipboard'
#     fi
#     if [[ -n $cmd ]]; then
#         while IFS= read -r line; do
#             [[ -z $line ]] && continue
#             bind_key=$(printf '%s' "$line" |
#                 sed -E "s/copy-selection(-and-cancel)?$/copy-pipe\1 \"$cmd\"/g")
#             eval "tmux $bind_key"
#         done <<< $(tmux list-keys | grep -E 'copy-selection|copy-pipe')
#     fi
# }
#
# fzf_url() {
#     local ip4_seg="(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])"
#     local path_set="[-a-zA-Z0-9@:%_\+\.~#?&//=]"
#     local url_re="(https?|ftp|file)://($path_set+|(($ip4_seg\){3,3}$ip4_seg$path_set*))"
#     local -a url=($(tmux capture-pane -S - -Jp | grep -oE "$url_re"))
#     if [[ -z $url ]]; then
#         return 0
#     else
#         printf "%s\n" ${url[@]} |
#             sort -u |
#             nl -w3 -s '  ' |
#             fzf-tmux -d 25% --multi --exit-0 --cycle --reverse |
#             awk '{print $2}' |
#             xargs -I {} xdg-open {} &> /dev/null
#     fi
# }
#
# update_env_event() {
#     local event='client-attached'
#     local event_dir=${TMUX%%,*}-event
#     mkdir -p $event_dir 2>/dev/null
#     rm $event_dir/$event-pane* 2>/dev/null
#     tmux list-panes -a -F '#D' | sed -E "s|^(.*)$|$event_dir/$event-pane-\1|g" | xargs touch
# }
#
# "$@".
